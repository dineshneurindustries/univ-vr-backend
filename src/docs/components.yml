components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
          format: email
        name:
          type: string
        role:
          type: string
          enum: [user, admin]
      example:
        id: 5ebac534954b54139806c112
        email: fake@example.com
        name: fake name
        role: user
    Country:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        name:
          type: string
      example:
        id: 5ebac534954b54139806c112
        code: US
        name: United States
    State:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        state_code:
          type: string
      example:
        id: 5ebac534954b54139806c112
        name: California
        state_code: CA
    University:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        state:
          $ref: '#/components/schemas/State'
      example:
        id: 5ebac534954b54139806c112
        name: Stanford University
        state:
          id: 5ebac534954b54139806c112
          name: California
          state_code: CA
    College:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        university:
          type: string
      example:
        id: 5ebac534954b54139806c113
        name: Sample College
        university: 65d48fdefd295f1e5872874e
    Building:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        college:
          type: string
          description: ID of the college to which the building belongs
      example:
        id: 5ebac534954b54139806c112
        name: Building A
        college: 5ebac534954b54139806c113
    Room:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        image:
          type: file
          format: uri
          description: URL of the image associated with the room
        building:
          type: string
          description: ID of the building to which the room belongs
        description:
          type: string
      example:
        id: 5ebac534954b54139806c115
        name: Library
        image: http://example.com/room101.jpg
        building: 5ebac534954b54139806c112
        description: something about image
    Token:
      type: object
      properties:
        token:
          type: string
        expires:
          type: string
          format: date-time
      example:
        token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiI1ZWJhYzUzNDk1NGI1NDEzOTgwNmMxMTIiLCJpYXQiOjE1ODkyOTg0ODQsImV4cCI6MTU4OTMwMDI4NH0.m1U63blB0MLej_WfB7yC2FTMnCziif9X8yzwDEfJXAg
        expires: 2020-05-12T16:18:04.793Z

    AuthTokens:
      type: object
      properties:
        access:
          $ref: '#/components/schemas/Token'
        refresh:
          $ref: '#/components/schemas/Token'

    Error:
      type: object
      properties:
        code:
          type: number
        message:
          type: string

  responses:
    DuplicateEmail:
      description: Email already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Email already taken
    DuplicateName:
      description: Name already taken
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 409
            message: Name already taken
    Unauthorized:
      description: Unauthorized
      content:
       application/json:
         schema:
           $ref: '#/components/schemas/Error'
         example:
           code: 401
           message: Please authenticate
    Forbidden:
      description: Forbidden
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 403
            message: Forbidden
    NotFound:
      description: Not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 404
            message: Not found
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
          example:
            code: 400
            message: Bad Request
        
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
